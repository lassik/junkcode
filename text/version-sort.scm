(import (scheme base) (scheme char) (scheme write))

(define (number-or-char-at s i)
  (let ((n (string-length s)))
    (let loop ((number #f) (i i))
      (let* ((char  (if (< i n) (string-ref s i) #f))
             (digit (if char (digit-value char) #f)))
        (if (not digit)
            (values (or number char) (if number i (+ i 1)))
            (loop (+ digit (* 10 (or number 0)))
                  (+ i 1)))))))

(define (version-sort a b)
  (let loop ((ia 0) (ib 0))
    (let-values (((xa ia) (number-or-char-at a ia))
                 ((xb ib) (number-or-char-at b ib)))
      (cond ((number? xa)
             (cond ((eqv? #f xb) 1)
                   ((not (number? xb)) -1)
                   ((< xa xb) -1)
                   ((> xa xb) 1)
                   (else (loop ia ib))))
            ((char? xa)
             (cond ((eqv? #f xb) 1)
                   ((not (char? xb)) -1)
                   ((char<? xa xb) -1)
                   ((char>? xa xb) 1)
                   (else (loop ia ib))))
            (else (if (eqv? #f xb) 0 -1))))))

(define (test a b)
  (for-each display (list a "  " b "  " (version-sort a b)))
  (newline))

(test "" "")
(test "a" "b")
(test "1.2.3" "1.2.3")
(test "1.002.3" "1.2.03")
(test "1.11" "1.2")
(test "1.2.3" "2.3.4")
(test "2.3.4" "1.2.3")
(test "4.03d" "4.3d")
(test "4.3d" "4.3e")
(test "4.3e" "4.3d")
(test "2019-06-22" "2019-06-23")
